"use strict";var _extends=Object.assign||function(a){for(var b=1;b<arguments.length;b++){var c=arguments[b];for(var d in c)Object.prototype.hasOwnProperty.call(c,d)&&(a[d]=c[d])}return a},ConfirmLink=React.createClass({displayName:"ConfirmLink",getInitialState:function(){return{showConfirm:!1}},getDefaultProps:function(){return{action:function(){return!1},linkContent:"Do something. (set the linkContent prop to change this...)",confirmMessage:"Are you sure that you want to do this?",confirmText:"Yes please",cancelText:"No thank you"}},showHideConfirm:function(){this.setState({showConfirm:!this.state.showConfirm})},render:function(){return React.createElement("span",{className:"ReactConfirmLink",onClick:this.showHideConfirm},this.props.linkContent,this.state.showConfirm?React.createElement("div",{id:"ReactConfirm"},React.createElement(ConfirmBox,_extends({},this.props,{cancel:this.showHideConfirm}))):"")}}),ConfirmBox=React.createClass({displayName:"ConfirmBox",executeAction:function(){this.props.action(this.props.actionArg),this.props.cancel()},render:function(){return React.createElement("div",null,React.createElement("div",null,React.createElement("p",null,this.props.confirmMessage),React.createElement("div",{className:"confirm-button",onClick:this.executeAction},this.props.confirmText),React.createElement("div",{className:"confirm-button cancel",onClick:this.props.cancel},this.props.cancelText)))}});