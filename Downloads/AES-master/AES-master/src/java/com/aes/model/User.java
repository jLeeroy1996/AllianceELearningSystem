package com.aes.model;
// Generated Sep 5, 2015 8:45:49 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.codehaus.jackson.annotate.JsonBackReference;
import org.codehaus.jackson.annotate.JsonManagedReference;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="aes"
)
public class User  implements java.io.Serializable {


     private String userName;
     private BusinessUnit businessUnit;
     private UserType userType;
     private String password;
     private String name;
     private String position;
     private String email;
     private String createdBy;
     private Date dateCreated;
     private String editedBy;
     private Date dateEdited;
     private boolean active;
     private Set<ExamScores> examScoreses = new HashSet<ExamScores>(0);
     private Set<CoursesTaken> coursesTakens = new HashSet<CoursesTaken>(0);
     private Set<Course> courses = new HashSet<Course>(0);

    public User() {
    }

	
    public User(String userName, BusinessUnit businessUnit, UserType userType, String password, String name, String position, String email, String createdBy, Date dateCreated, String editedBy, Date dateEdited, boolean active) {
        this.userName = userName;
        this.businessUnit = businessUnit;
        this.userType = userType;
        this.password = password;
        this.name = name;
        this.position = position;
        this.email = email;
        this.createdBy = createdBy;
        this.dateCreated = dateCreated;
        this.editedBy = editedBy;
        this.dateEdited = dateEdited;
        this.active = active;
    }
    public User(String userName, BusinessUnit businessUnit, UserType userType, String password, String name, String position, String email, String createdBy, Date dateCreated, String editedBy, Date dateEdited, boolean active, Set<ExamScores> examScoreses, Set<CoursesTaken> coursesTakens, Set<Course> courses) {
       this.userName = userName;
       this.businessUnit = businessUnit;
       this.userType = userType;
       this.password = password;
       this.name = name;
       this.position = position;
       this.email = email;
       this.createdBy = createdBy;
       this.dateCreated = dateCreated;
       this.editedBy = editedBy;
       this.dateEdited = dateEdited;
       this.active = active;
       this.examScoreses = examScoreses;
       this.coursesTakens = coursesTakens;
       this.courses = courses;
    }
   
     @Id 

    
    @Column(name="user_name", unique=true, nullable=false, length=15)
    public String getUserName() {
        return this.userName;
    }
    
    public void setUserName(String userName) {
        this.userName = userName;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="business_unit_id", nullable=false)
    @JsonManagedReference
    public BusinessUnit getBusinessUnit() {
        return this.businessUnit;
    }
    
    public void setBusinessUnit(BusinessUnit businessUnit) {
        this.businessUnit = businessUnit;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_type_id", nullable=false)
    @JsonManagedReference
    public UserType getUserType() {
        return this.userType;
    }
    
    public void setUserType(UserType userType) {
        this.userType = userType;
    }

    
    @Column(name="password", nullable=false, length=45)
    @JsonBackReference
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="name", nullable=false, length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="position", nullable=false, length=45)
    public String getPosition() {
        return this.position;
    }
    
    public void setPosition(String position) {
        this.position = position;
    }

    
    @Column(name="email", nullable=false, length=45)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="created_by", nullable=false, length=15)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_created", nullable=false, length=19)
    public Date getDateCreated() {
        return this.dateCreated;
    }
    
    public void setDateCreated(Date dateCreated) {
        this.dateCreated = dateCreated;
    }

    
    @Column(name="edited_by", nullable=false, length=15)
    public String getEditedBy() {
        return this.editedBy;
    }
    
    public void setEditedBy(String editedBy) {
        this.editedBy = editedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_edited", nullable=false, length=19)
    public Date getDateEdited() {
        return this.dateEdited;
    }
    
    public void setDateEdited(Date dateEdited) {
        this.dateEdited = dateEdited;
    }

    
    @Column(name="active", nullable=false)
    public boolean isActive() {
        return this.active;
    }
    
    public void setActive(boolean active) {
        this.active = active;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
@JsonBackReference
    public Set<ExamScores> getExamScoreses() {
        return this.examScoreses;
    }
    
    public void setExamScoreses(Set<ExamScores> examScoreses) {
        this.examScoreses = examScoreses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
@JsonBackReference
    public Set<CoursesTaken> getCoursesTakens() {
        return this.coursesTakens;
    }
    
    public void setCoursesTakens(Set<CoursesTaken> coursesTakens) {
        this.coursesTakens = coursesTakens;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
@JsonBackReference
    public Set<Course> getCourses() {
        return this.courses;
    }
    
    public void setCourses(Set<Course> courses) {
        this.courses = courses;
    }




}


